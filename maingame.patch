--- neworcinvasion_git/maingame.py	2023-11-21 13:03:33.212723242 +0100
+++ neworcinvasion_fix/maingame.py	2023-11-21 12:55:05.580353238 +0100
@@ -3,7 +3,7 @@
 from enemy import Enemy, Boss, EnemyOnBoat, BossBoat, EnemyWarg, BossWarg, EnemyDwarf, BossDwarf, EnemyGobelinArcher, EnemyGobelinMassue, BossBalrog, Peon
 from sound import Sound
 from bonus import BonusAttack,GoodElf, BonusMelee, GoodElfSword
-from databaseconnection import DBConnection
+#from databaseconnection import DBConnection
 from classesql import User
 
 class Game:
@@ -64,8 +64,8 @@
         self.goodelfspawn = False
         self.enemyremain = 0
         self.bonusremain = 0
-        self.db = DBConnection()
-        self.userdata = self.db.finduserdic()
+        #self.db = DBConnection()
+        #self.userdata = self.db.finduserdic()
 
 
 
@@ -226,9 +226,9 @@
         self.allprojectiles.remove()
 
     def gameover (self):
-        if 'username' in self.userdata:
-            username_value = self.userdata['username']
-            self.db.savehighscore(username_value, self.score)
+        #if 'username' in self.userdata:
+            #username_value = self.userdata['username']
+            #self.db.savehighscore(username_value, self.score)
 
         self.level_number = 0
         self.score = 0
@@ -239,17 +239,17 @@
         
 
     def updatescore(self, screen):
-        if 'highscore' in self.userdata:
-            highscore_value = self.userdata['highscore']
-            font = pygame.font.SysFont('Small font', 20, 0)
-            scoretext = font.render(f'Score: {self.score}\nHighscore: {highscore_value}', 1, (255, 0, 0))
-            screen.blit(scoretext, (20,20))
-            screen.blit(self.player.image, self.player.rect)#position du joueur. rec sert a detecter la position du joueur voir terminal
-        else:
-            font = pygame.font.SysFont('Small font', 20, 0)
-            scoretext = font.render(f'Score : {self.score}', 1, (255,0,0))
-            screen.blit(scoretext, (20,20))
-            screen.blit(self.player.image, self.player.rect)#position du joueur. rec sert a detecter la position du joueur voir terminal
+        #if 'highscore' in self.userdata:
+            #highscore_value = self.userdata['highscore']
+            #font = pygame.font.SysFont('Small font', 20, 0)
+            #scoretext = font.render(f'Score: {self.score}\nHighscore: {highscore_value}', 1, (255, 0, 0))
+            #screen.blit(scoretext, (20,20))
+            #screen.blit(self.player.image, self.player.rect)#position du joueur. rec sert a detecter la position du joueur voir terminal
+        #else:
+        font = pygame.font.SysFont('Small font', 20, 0)
+        scoretext = font.render(f'Score : {self.score}', 1, (255,0,0))
+        screen.blit(scoretext, (20,20))
+        screen.blit(self.player.image, self.player.rect)#position du joueur. rec sert a detecter la position du joueur voir terminal
             
 
         for explose in self.allexploses:
